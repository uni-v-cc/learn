"use strict";(self.webpackChunklearn_uni_v_cc=self.webpackChunklearn_uni_v_cc||[]).push([[974],{4796:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/scene1-c8b79104bc0eebccf99f175887332d57.png"},5767:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"creator/practices/prefabification","title":"Prefabification","description":"This is one of the most important tips, and is a requirement to publish assets on Uni-V.CC.","source":"@site/docs/creator/practices/prefabification.md","sourceDirName":"creator/practices","slug":"/creator/practices/prefabification","permalink":"/docs/creator/practices/prefabification","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"creatorSidebar","previous":{"title":"Good Practices","permalink":"/docs/category/good-practices"}}');var s=t(4848),a=t(8453);const o={sidebar_position:1},r="Prefabification",c={},d=[];function h(e){const n={code:"code",h1:"h1",header:"header",img:"img",li:"li",ol:"ol",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"prefabification",children:"Prefabification"})}),"\n",(0,s.jsx)(n.p,{children:"This is one of the most important tips, and is a requirement to publish assets on Uni-V.CC."}),"\n",(0,s.jsx)(n.p,{children:"Keep your assets as prefabs and/or prefab variants!"}),"\n",(0,s.jsx)(n.p,{children:"For example: You have a model (FBX), and also add a bunch of things using VRCFury ontop inside the scene."}),"\n",(0,s.jsx)(n.p,{children:"Think of something like this:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(4796).A+"",width:"403",height:"618"})}),"\n",(0,s.jsxs)(n.p,{children:["You can easily turn it into prefabs by grabbing the object inside the hierarchy (would be ",(0,s.jsx)(n.code,{children:"Main Version"})," and ",(0,s.jsx)(n.code,{children:"Alt Version"})," objects on the screenshot above) and dragging them into the folder (where ",(0,s.jsx)(n.code,{children:"Avatar Main Mesh"}),", ",(0,s.jsx)(n.code,{children:"Avatar Data"})," and ",(0,s.jsx)(n.code,{children:"Demo Scene"})," are on the screenshot)"]}),"\n",(0,s.jsx)(n.p,{children:"This would turn the asset into a prefab file which contains all the additions ontop of the FBX."}),"\n",(0,s.jsx)(n.p,{children:"Now you might build more versions ontop of that prefab (for example, tweaking blendshapes), and drag that again into the files. A menu will pop up asking if you want to make a new prefab, or a variant. In these cases you'd most likely want to create a variant."}),"\n",(0,s.jsx)(n.p,{children:"This way you can have three prefab layers:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"The FBX file itself"}),"\n",(0,s.jsx)(n.li,{children:"Basic features (Gestures, Custom animations, GoGoLoco etc)"}),"\n",(0,s.jsx)(n.li,{children:"Custom versions (Male/Female, Body shapes etc)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"And best part is when you edit the second layer, the changes will propagate downstream to all end-user prefabs."})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);